{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\task-manager-app\\\\client\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\n// client/src/components/TaskList.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const handleAddTask = () => {\n    if (newTask.trim() === '') return;\n    const task = {\n      id: Date.now(),\n      title: newTask\n    };\n    setTasks([...tasks, task]);\n    setNewTask('');\n  };\n  const handleDeleteTask = id => {\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCDD Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Enter your task...\",\n        style: {\n          padding: '10px',\n          width: '250px',\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        style: {\n          padding: '10px 15px'\n        },\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '15px',\n          padding: '10px',\n          border: '1px solid #ccc',\n          borderRadius: '8px'\n        },\n        children: [task.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          style: {\n            marginLeft: '15px',\n            padding: '5px 10px',\n            backgroundColor: 'red',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","newTask","setNewTask","handleAddTask","trim","task","id","Date","now","title","handleDeleteTask","updatedTasks","filter","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","value","onChange","e","target","placeholder","width","marginRight","onClick","listStyleType","map","border","borderRadius","marginLeft","backgroundColor","color","cursor","_c","$RefreshReg$"],"sources":["C:/Users/HP/task-manager-app/client/src/components/TaskList.js"],"sourcesContent":["// client/src/components/TaskList.js\r\nimport React, { useState } from 'react';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask.trim() === '') return;\r\n    const task = {\r\n      id: Date.now(),\r\n      title: newTask,\r\n    };\r\n    setTasks([...tasks, task]);\r\n    setNewTask('');\r\n  };\r\n\r\n  const handleDeleteTask = (id) => {\r\n    const updatedTasks = tasks.filter((task) => task.id !== id);\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>üìù Task Manager</h2>\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n          placeholder=\"Enter your task...\"\r\n          style={{ padding: '10px', width: '250px', marginRight: '10px' }}\r\n        />\r\n        <button onClick={handleAddTask} style={{ padding: '10px 15px' }}>Add Task</button>\r\n      </div>\r\n      \r\n      <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n        {tasks.map((task) => (\r\n          <li key={task.id} style={{ marginBottom: '15px', padding: '10px', border: '1px solid #ccc', borderRadius: '8px' }}>\r\n            {task.title}\r\n            <button\r\n              onClick={() => handleDeleteTask(task.id)}\r\n              style={{ marginLeft: '15px', padding: '5px 10px', backgroundColor: 'red', color: 'white', border: 'none', borderRadius: '5px', cursor: 'pointer' }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC3B,MAAMC,IAAI,GAAG;MACXC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,KAAK,EAAER;IACT,CAAC;IACDD,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEM,IAAI,CAAC,CAAC;IAC1BH,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMQ,gBAAgB,GAAIJ,EAAE,IAAK;IAC/B,MAAMK,YAAY,GAAGZ,KAAK,CAACa,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;IAC3DN,QAAQ,CAACW,YAAY,CAAC;EACxB,CAAC;EAED,oBACEf,OAAA;IAAKiB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BnB,OAAA;MAAAmB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBvB,OAAA;MAAKiB,KAAK,EAAE;QAAEO,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,gBACnCnB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErB,OAAQ;QACfsB,QAAQ,EAAGC,CAAC,IAAKtB,UAAU,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC5CI,WAAW,EAAC,oBAAoB;QAChCb,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEa,KAAK,EAAE,OAAO;UAAEC,WAAW,EAAE;QAAO;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eACFvB,OAAA;QAAQiC,OAAO,EAAE1B,aAAc;QAACU,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAY,CAAE;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAC,eAENvB,OAAA;MAAIiB,KAAK,EAAE;QAAEiB,aAAa,EAAE,MAAM;QAAEhB,OAAO,EAAE;MAAE,CAAE;MAAAC,QAAA,EAC9ChB,KAAK,CAACgC,GAAG,CAAE1B,IAAI,iBACdT,OAAA;QAAkBiB,KAAK,EAAE;UAAEO,YAAY,EAAE,MAAM;UAAEN,OAAO,EAAE,MAAM;UAAEkB,MAAM,EAAE,gBAAgB;UAAEC,YAAY,EAAE;QAAM,CAAE;QAAAlB,QAAA,GAC/GV,IAAI,CAACI,KAAK,eACXb,OAAA;UACEiC,OAAO,EAAEA,CAAA,KAAMnB,gBAAgB,CAACL,IAAI,CAACC,EAAE,CAAE;UACzCO,KAAK,EAAE;YAAEqB,UAAU,EAAE,MAAM;YAAEpB,OAAO,EAAE,UAAU;YAAEqB,eAAe,EAAE,KAAK;YAAEC,KAAK,EAAE,OAAO;YAAEJ,MAAM,EAAE,MAAM;YAAEC,YAAY,EAAE,KAAK;YAAEI,MAAM,EAAE;UAAU,CAAE;UAAAtB,QAAA,EACpJ;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAPFd,IAAI,CAACC,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhDID,QAAQ;AAAAyC,EAAA,GAARzC,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}